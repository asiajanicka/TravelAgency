@startuml
class Hotel {
- String name
- int numberOfStars
- String address
- List<Room> rooms
+ Room findRoom(int)
'+ String getName()
'+ void setName(String)
'+ int getNumberOfStars()
'+ void setNumberOfStars(byte)
'+ String getAddress()
'+ void setAddress(String)
'+ List<Room> getRooms()
'+ void setRooms(List<Room>)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class PlaneSeat {
- PlaneSeatType type
'+ PlaneSeatType getType()
'+ void setType(PlaneSeatType)
'+ String toString()
}
'class DateFormat {
'+ {static} String format(LocalDateTime)
'+ {static} String format(LocalDate)
'}
'enum Language {
'+  ENGLISH
'+  POLISH
'+  SPANISH
'}
class Seat {
- int number
- BigDecimal price
- boolean isBooked
+ boolean bookSeat()
'+ int getNumber()
'+ void setNumber(int)
'+ BigDecimal getPrice()
'+ void setPrice(BigDecimal)
'+ boolean isBooked()
'+ void setBooked(boolean)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class Participant {
- Person person
- List<HotelBooking> hotelBookings
- List<TransportBooking> transportBookings
- List<Activity> activities
+ void addTransportBooking(TransportBooking)
+ void addHotelBooking(HotelBooking)
+ void addActivity(Activity)
'+ Person getPerson()
+ void printBookings()
+ void printTransportBookings()
+ void printHotelBookings()
+ void printActivityBookings()
+ BigDecimal calculateTotalBookingCost()
'+ void setPerson(Person)
'+ List<HotelBooking> getHotelBookings()
'+ void setHotelBookings(List<HotelBooking>)
'+ List<TransportBooking> getTransportBookings()
'+ void setTransportBookings(List<TransportBooking>)
'+ List<Activity> getActivities()
'+ void setActivities(List<Activity>)
'+ boolean equals(Object)
'+ int hashCode()
}
class FlightBooking {
'- {static} String PRICE_FOR_HAND_BAG
'- {static} String PRICE_FOR_CHECKED_BAG
- PlaneBaggage baggage
# BigDecimal getPriceForLuggage()
'+ String toString()
}
class CustomizedTrip {
- LocalDate startDate
- LocalDate endDate
- List<Participant> participants
- List<Destination> destinations
+ void addDestination(Destination)
+ void addParticipant(Participant)
+ Participant getParticipant(Person)
+ void printSummary()
+ BigDecimal calculateTotalPrice()
'+ List<Destination> getDestinations()
'+ void setDestinations(List<Destination>)
'+ List<Participant> getParticipants()
'+ void setParticipants(List<Participant>)
'+ LocalDate getStartDate()
'+ void setStartDate(LocalDate)
'+ LocalDate getEndDate()
'+ void setEndDate(LocalDate)
}
class HotelBooking {
- LocalDate dateFrom
- LocalDate dateTo
- boolean forAdult
- Room room
- Board board
+ BigDecimal calculatePrice()
'+ LocalDate getDateFrom()
'+ void setDateFrom(LocalDate)
'+ LocalDate getDateTo()
'+ void setDateTo(LocalDate)
'+ boolean isForAdult()
'+ void setForAdult(boolean)
'+ Room getRoom()
'+ void setRoom(Room)
'+ Board getBoard()
'+ void setBoard(BoardType)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class Board {
'- {static} String PRICE_FOR_BB
'- {static} String PRICE_FOR_HB
'- {static} String PRICE_FOR_FB
'- {static} String PRICE_FOR_ALL_INCLUSIVE
- BoardType type
+ BigDecimal getPrice()
'+ BoardType getType()
'+ void setType(BoardType)
'+ String toString()
}
class Flight {
- List<PlaneSeat> seats
+ LocalDateTime getBoardingTime()
+ Seat findSeat(int)
'+ List<PlaneSeat> getSeats()
'+ void setSeats(List<PlaneSeat>)
'+ String toString()
}
'enum RoomType {
'+  SINGLE
'+  DOUBLE
'+  TRIPLE
'+  QUAD
'+  KING
'}
class TravelAgency {
- List<Destination> destinations
+ void addMalagaDestination()
+ void addDestination(Destination)
+ void printDestinations()
'+ List<Destination> getDestinations()
'+ void setDestinations(List<Destination>)
'+ String toString()
}
class CoachTravelBooking {
'- {static} String PRICE_FOR_SMALL_SUITCASE
'- {static} String PRICE_FOR_LARGE_SUITCASE
- int numberOfSmallSuitcases
- int numberOfLargeSuitcases
# BigDecimal getPriceForLuggage()
'+ int getNumberOfSmallSuitcases()
'+ void setNumberOfSmallSuitcases(int)
'+ int getNumberOfLargeSuitcases()
'+ void setNumberOfLargeSuitcases(int)
'+ String toString()
}
'enum City {
'+  WARSAW
'+  MALAGA
'+  MADRID
'}
abstract class Transport {
- LocalDateTime dateDeparture
- LocalDateTime dateArrival
- City cityFrom
- City cityTo
- TransportType type
+ {abstract}Seat findSeat(int)
'+ LocalDateTime getDateDeparture()
'+ void setDateDeparture(LocalDateTime)
'+ LocalDateTime getDateArrival()
'+ void setDateArrival(LocalDateTime)
'+ City getCityFrom()
'+ void setCityFrom(City)
'+ City getCityTo()
'+ void setCityTo(City)
'+ TransportType getType()
'+ void setType(TransportType)
'+ String toString()
}
'enum BoardType {
'+  BB
'+  HB
'+  FB
'+  ALL_INCLUSIVE
'- String displayName
'+ String getDisplayName()
'}
class Place {
- Country country
- City city
'+ Country getCountry()
'+ void setCountry(Country)
'+ City getCity()
'+ void setCity(City)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
'enum PlaneSeatType {
'+  ECONOMY_CLASS
'+  BUSINESS_CLASS
'+  FIRST_CLASS
'}
class Room {
- int number
- RoomType type
- BigDecimal price
'+ int getNumber()
'+ void setNumber(int)
'+ RoomType getType()
'+ void setType(RoomType)
'+ BigDecimal getPrice()
'+ void setPrice(BigDecimal)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class OutOfHotelActivity {
- String address
- boolean isTransportProvided
- double lengthInHours
- Language language
'+ String getAddress()
'+ void setAddress(String)
'+ boolean isTransportProvided()
'+ void setTransportProvided(boolean)
'+ double getLengthInHours()
'+ void setLengthInHours(double)
'+ Language getLanguage()
'+ void setLanguage(Language)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
'class TripBooking {
'+ {static} void main(String[])
'}
abstract class Activity {
- LocalDateTime date
- String name
- BigDecimal price
'+ LocalDateTime getDate()
'+ void setDate(LocalDateTime)
'+ String getName()
'+ void setName(String)
'+ BigDecimal getPrice()
'+ void setPrice(BigDecimal)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class AtHotelActivity {
- ActivityType type
- boolean isOwnEquipmentRequired
'+ ActivityType getType()
'+ void setType(ActivityType)
'+ boolean isOwnEquipmentRequired()
'+ void setOwnEquipmentRequired(boolean)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class Destination {
- Place place
- Hotel hotel
- List<Transport> transports
- List<Activity> activities
+ Activity findActivity(String)
+ void addActivity(Activity)
+ void addTransport(Transport)
+ void printDestinationSummary()
+ Transport findTransport(City,City,TransportType)
'+ Place getPlace()
'+ void setPlace(Place)
'+ List<Transport> getTransports()
'+ void setTransports(List<Transport>)
'+ Hotel getHotel()
'+ void setHotel(Hotel)
'+ List<Activity> getActivities()
'+ void setActivities(List<Activity>)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
'enum PlaneBaggage {
'+  CHECKED
'+  HAND
'}
abstract class TransportBooking {
- Transport transport
- int seatNumber
- boolean isForAdult
+ BigDecimal getPriceForSeat()
+ BigDecimal calculatePrice()
# {abstract}BigDecimal getPriceForLuggage();
'+ Transport getTransport()
'+ void setTransport(Transport)
'+ int getSeatNumber()
'+ void setSeatNumber(int)
'+ boolean isForAdult()
'+ void setForAdult(boolean)
'+ String toString()
}
'enum ActivityType {
'+  CITY_TOUR
'+  SAND_FOOTBALL
'+  DIVING
'+  BEACH_VOLLEYBALL
'+  SURFING
'+  BANANA_BOAT
'}
'enum TransportType {
'+  PLANE
'+  BUS
'}
'enum Country {
'+  PL
'+  ES
'+  ENG
'}
class Person {
- String id
- String firstName
- String lastName
- int age
'+ String getId()
'+ void setId(String)
'+ String getFirstName()
'+ void setFirstName(String)
'+ String getLastName()
'+ void setLastName(String)
'+ int getAge()
'+ void setAge(int)
'+ String toString()
'+ boolean equals(Object)
'+ int hashCode()
}
class CoachTravel {
- List<Seat> seats
+ Seat findSeat(int)
'+ List<Seat> getSeats()
'+ void setSeats(List<Seat>)
'+ String toString()
}

TravelAgency *-- Destination
CustomizedTrip o-- Destination
CustomizedTrip *-- Participant
Destination *-- Transport
Destination *-- Hotel
Destination *-- Activity
Destination o-- Place
Participant o-- Person
Participant o-- Activity
Participant *-- HotelBooking
Participant *-- TransportBooking
CoachTravel *-- Seat
Hotel *-- Room
HotelBooking o-- Room
HotelBooking o-- Board
TransportBooking o-- Transport
CoachTravelBooking o-- Seat
FlightBooking o-- PlaneSeat
Flight *-- PlaneSeat
Seat <|-- PlaneSeat
TransportBooking <|-- FlightBooking
Transport <|-- Flight
TransportBooking <|-- CoachTravelBooking
Activity <|-- OutOfHotelActivity
Activity <|-- AtHotelActivity
Transport <|-- CoachTravel
@enduml